"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"

[mgr]
ratio = [ 2, 3, 4 ]
sort_by = "alphabetical"
sort_dir_first = true
show_hidden = true
show_symlink = false

[preview]
wrap = "no"
tab_size = 4
max_width = 1080
max_height = 1080
image_filter = "catmull-rom"
image_quality = 90

[opener]
edit = [
  { run = '${EDITOR:-vi} "$@"', desc = "$EDITOR", block = true, for = "unix" },
  { run = 'code %*', orphan = true, desc = "code", for = "windows" },
  { run = 'code -w %*', block = true, desc = "code (block)", for = "windows" },
]
add = [
  { run = 'transmission-remote -a "$@"', for = "macos" },
]
open = [
  { run = 'xdg-open "$1"', desc = "Open", for = "linux" },
  { run = 'open "$@"', desc = "Open", for = "macos" },
  { run = 'start "" "%1"', orphan = true, desc = "Open", for = "windows" },
  { run = 'termux-open "$1"', desc = "Open", for = "android" },
]
reveal = [
  { run = 'xdg-open "$(dirname "$1")"', desc = "Reveal", for = "linux" },
  { run = 'open -R "$1"', desc = "Reveal", for = "macos" },
  { run = 'explorer /select,"%1"', orphan = true, desc = "Reveal", for = "windows" },
  { run = 'termux-open "$(dirname "$1")"', desc = "Reveal", for = "android" },
  { run = '''clear; exiftool "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show EXIF", for = "unix" },
]
extract = [
  { run = 'ya pub extract --list "$@"', desc = "Extract here", for = "unix" },
  { run = 'ya pub extract --list %*', desc = "Extract here", for = "windows" },
]
play = [
  { run = 'mpv --force-window "$@"', orphan = true, for = "unix" },
  { run = 'mpv --force-window %*', orphan = true, for = "windows" },
  { run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show media info", for = "unix" },
]

[open]
rules = [
  # Folder
  { name = "*/", use = [ "edit", "open", "reveal" ] },
  # Text
  { mime = "text/*", use = [ "edit", "reveal" ] },
  # Image
  { mime = "image/*", use = [ "open", "reveal" ] },
  # Media
  { mime = "{audio,video}/*", use = [ "play", "reveal" ] },
  # Torrent
  { mime = "application/bittorrent", use = [ "add" ] },
  # Archive
  { mime = "application/{zip,rar,7z*,tar,gzip,xz,zstd,bzip*,lzma,compress,archive,cpio,arj,xar,ms-cab*}", use = [ "extract", "reveal" ] },
  # JSON
  { mime = "application/{json,ndjson}", use = [ "edit", "reveal" ] },
  { mime = "*/javascript", use = [ "edit", "reveal" ] },
  # Empty file
  { mime = "inode/empty", use = [ "edit", "reveal" ] },
  # Fallback
  { name = "*", use = [ "open", "reveal" ] },
]

[plugin]
prepend_fetchers = [
  # mimetype
  { id = "mime", name = "*", run = "mime", prio = "high" },
]

prepend_spotters = [
  { name = "*/", run = "folder" },
  # Code
  { mime = "text/*", run = "code" },
  { mime = "application/{mbox,javascript,wine-extension-ini}", run = "code" },
  # Image
  { mime = "image/{avif,hei?,jxl}", run = "magick" },
  { mime = "image/svg+xml", run = "svg" },
  { mime = "image/*", run = "image" },
  # Video
  { mime = "video/*", run = "video" },
  # Fallback
  { name = "*", run = "file-extra-metadata" },
]

prepend_preloaders = [
  # Image
  { mime = "image/{avif,hei?,jxl}", run = "magick" },
  { mime = "image/svg+xml", run = "svg" },
  { mime = "image/*", run = "image" },
  # Video
  { mime = "video/*", run = "video" },
  # PDF
  { mime = "application/pdf", run = "pdf" },
  # Font
  { mime = "font/*", run = "font" },
  { mime = "application/ms-opentype", run = "font" },
]

prepend_previewers = [
  { name = "*/", run = "folder" },
  # Code
  { mime = "text/*", run = "code" },
  { mime = "application/{mbox,javascript,wine-extension-ini}", run = "code" },
  # JSON
  { mime = "application/{json,ndjson}", run = "json" },
  # Image
  { mime = "image/{avif,hei?,jxl}", run = "magick" },
  { mime = "image/svg+xml", run = "svg" },
  { mime = "image/*", run = "image" },
  # Video
  { mime = "video/*", run = "video" },
  # Audio
  { mime = "audio/*", run = "exifaudio" },
  # PDF
  { mime = "application/pdf", run = "pdf" },
  # Torrent
  { mime = "application/bittorrent", run = "torrent-preview" },
  # Archive
  { mime = "application/{zip,rar,7z*,tar,gzip,xz,zstd,bzip*,lzma,compress,archive,cpio,arj,xar,ms-cab*}", run = "lsar" },
  { mime = "application/{debian*-package,redhat-package-manager,rpm,android.package-archive}", run = "lsar" },
  { name = "*.{AppImage,appimage}", run = "lsar" },
  # Virtual Disk / Disk Image
  { mime = "application/{iso9660-image,qemu-disk,ms-wim,apple-diskimage}", run = "lsar" },
  { mime = "application/virtualbox-{vhd,vhdx}", run = "lsar" },
  { name = "*.{img,fat,ext,ext2,ext3,ext4,squashfs,ntfs,hfs,hfsx}", run = "lsar" },
  # Font
  { mime = "font/*", run = "font" },
  { mime = "application/ms-opentype", run = "font" },
  # Empty file
  { mime = "inode/empty", run = "empty" },
  # Fallback
  { name = "*", run = "file-extra-metadata" },
]

[input]
cursor_blink = false


[pick]
open_title = "Open with:"
open_origin = "hovered"
open_offset = [ 0, 1, 50, 7 ]

[which]
sort_by = "none"
sort_sensitive = false
sort_reverse = false
sort_translit = false
