#!/usr/bin/env bash

# wiki - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#configure-scripting-addition

# load yabi as sudo
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

BAR_HEIGHT=0 # $(sketchybar -m --query bar | jq -r '.height')

GENERAL=(
    external_bar all:"${BAR_HEIGHT}":0
    menubar_opacity 1.0
    split_type auto
    split_ratio 0.5
    auto_balance off
    insert_feedback_color 0xff282a36
)

LAYOUT=(
    layout bsp
    top_padding 4
    bottom_padding 4
    left_padding 4
    right_padding 4
    window_gap 4
)

WINDOWS=(
    window_shadow float
    window_opacity off
    active_window_opacity 1.0
    normal_window_opacity 0.97
    window_opacity_duration 0.15
    window_animation_duration 0.0
    window_placement second_child
    window_origin_display default
    window_zoom_persist on
)

MOUSE=(
    mouse_modifier fn
    mouse_action1 move
    mouse_action2 resize
    mouse_drop_action swap
    focus_follows_mouse off
    mouse_follows_focus off
)

yabai -m config "${GENERAL[@]}"
yabai -m config "${LAYOUT[@]}"
yabai -m config "${WINDOWS[@]}"
yabai -m config "${MOUSE[@]}"

# define sketchybar
# yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus &> /dev/null"
# yabai -m signal --add event=window_title_changed action="sketchybar --trigger title_change &> /dev/null"
# yabai -m signal --add event=window_created action="sketchybar --trigger space_windows_change" label="sketchybarNewWindowCreated"
# yabai -m signal --add event=window_destroyed action="sketchybar --trigger space_windows_change" label="sketchybarWindowDestroyed"

# sketchybar
# yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"
# yabai -m signal --add event=window_created action="sketchybar --trigger windows_on_spaces"
# yabai -m signal --add event=window_destroyed action="sketchybar --trigger windows_on_spaces"
# yabai -m signal --add event=application_front_switched action="sketchybar --trigger title_change"
# yabai -m signal --add event=window_focused action="sketchybar --trigger title_change"
# yabai -m signal --add event=window_title_changed action="sketchybar --trigger title_change" active=yes

# fix for focusing on next app when a windows closes
yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"

# float small, non-resizable windows
# yabai -m signal --add event=window_created action="yabai -m query --windows --window $YABAI_WINDOW_ID | jq -er ".\"can-resize\" or .\"is-floating\"" || yabai -m window $YABAI_WINDOW_ID --toggle float" label="floatSmallWindows"

# use apprc file
# source "${HOME}/.config/yabai/apprc"

# configs for all apps
yabai -m rule --add app=".*" sub-layer=normal

# above apps
sub_layer_above=(
  System Settings
  System Information
  System Preferences
)
for ((i = 1; i <= "${#sub_layer_above[@]}"; i++)); do
  yabai -m rule --add label="unmanage_${sub_layer_above[(($i - 1))]}" app="^${sub_layer_above[(($i - 1))]}.*$" sub-layer=above
done

# floating apps
unmanaged=(
  1Password
  Archive Utility
  Calculator
  ChatGPT
  Contacts
  Dictionary
  Downie 4
  FaceTime
  Finder
  FINAL FANTASY XIV
  FINAL FANTASY XIV ONLINE
  GPG Keychain
  IINA
  iPhone Mirroring
  Karabiner-Elements
  Karabiner-MultitouchExtension
  Keka
  Messages
  mpv
  Notes
  Permute 3
  Photo Booth
  Preferences
  Quicktime Player
  Reminders
  Source
  Software Update
  Stickies
  Suspicious Package
  System Settings
  System Preferences
  System Information
  VLC
  VMware Fusion
)
for ((i = 1; i <= "${#unmanaged[@]}"; i++)); do
  yabai -m rule --add label="unmanage_${unmanaged[(($i - 1))]}" app="^${unmanaged[(($i - 1))]}.*$" manage=off
done

# space 1
SPACE1=(
  Calendar
  Mail
  Steam
  NVIDIA GeForce NOW
  FINAL FANTASY XIV
)
for ((i = 1; i <= "${#SPACE1[@]}"; i++)); do
  yabai -m rule --add label="space1_${SPACE1[(($i - 1))]}" app="^${SPACE1[(($i - 1))]}.*$" space=^1
done

# space 2
SPACE2=(
  Twilight
  Safari
  Zen
)

for ((i = 1; i <= "${#SPACE2[@]}"; i++)); do
  yabai -m rule --add label="space2_${SPACE2[(($i - 1))]}" app="^${SPACE2[(($i - 1))]}.*$" space=^2
done

yabai -m config --space 2 layout stack

# space 3
SPACE3=(
  Docker Desktop
  Ghostty
  Postman
  VSCodium
  Xcode
)
for ((i = 1; i <= "${#SPACE3[@]}"; i++)); do
  yabai -m rule --add label="space3_${SPACE3[(($i - 1))]}" app="^${SPACE3[(($i - 1))]}.*$" space=^3
done

# space 4
SPACE4=(
  Brave Browser
  Tor Browser
)
for ((i = 1; i <= "${#SPACE4[@]}"; i++)); do
  yabai -m rule --add label="space4_${SPACE4[(($i - 1))]}" app="^${SPACE4[(($i - 1))]}.*$" space=^4
done

# apply rules to existing windows
yabai -m rule --apply

# unload macos window manager
launchctl unload -F /System/Library/LaunchAgents/com.apple.WindowManager.plist >/dev/null 2>&1 &

# unload macos volume and brightness osd
launchctl unload -F /System/Library/LaunchAgents/com.apple.OSDUIHelper.plist >/dev/null 2>&1 &

echo "yabai configuration loaded.."
