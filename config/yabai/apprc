#!/usr/bin/env bash

# configs for all apps
yabai -m rule --add app=".*" sub-layer=normal

# above apps
sub_layer_above=(
    System Settings
    System Information
    System Preferences
)

for ((i = 1; i <= "${#sub_layer_above[@]}"; i++)); do
    yabai -m rule --add label="unmanage_${sub_layer_above[(($i - 1))]}" app="^${sub_layer_above[(($i - 1))]}.*$" sub-layer=above
done

# floating apps
unmanaged=(
    1Password
    Archive Utility
    Calculator
    ChatGPT
    Contacts
    Dictionary
    Downie 4
    FaceTime
    Finder
    GPG Keychain
    IINA
    iPhone Mirroring
    Karabiner-Elements
    Karabiner-MultitouchExtension
    Keka
    Messages
    mpv
    Notes
    Permute 3
    Photo Booth
    Preferences
    Quicktime Player
    Reminders
    Screen Sharing
    Source
    Software Update
    Stickies
    Suspicious Package
    System Settings
    System Preferences
    System Information
    VLC
)

for ((i = 1; i <= "${#unmanaged[@]}"; i++)); do
    yabai -m rule --add label="unmanage_${unmanaged[(($i - 1))]}" app="^${unmanaged[(($i - 1))]}.*$" manage=off
done

# space 1
SPACE1=(
    Twilight
)

for ((i = 1; i <= "${#SPACE1[@]}"; i++)); do
  yabai -m rule --add label="space1_${SPACE1[(($i - 1))]}" app="^${SPACE1[(($i - 1))]}.*$" space=^1
done

# space 2
SPACE2=(
    VSCodium
    Ghostty
)

for ((i = 1; i <= "${#SPACE2[@]}"; i++)); do
  yabai -m rule --add label="space2_${SPACE2[(($i - 1))]}" app="^${SPACE2[(($i - 1))]}.*$" space=^2
done

# space 3
SPACE3=(
    Brave Browser
)

for ((i = 1; i <= "${#SPACE3[@]}"; i++)); do
  yabai -m rule --add label="space3_${SPACE3[(($i - 1))]}" app="^${SPACE3[(($i - 1))]}.*$" space=^3
done

# space 4
SPACE4=(
    Discord
    IINA
    mpv
    Spotify
    VLC
)

for ((i = 1; i <= "${#SPACE4[@]}"; i++)); do
  yabai -m rule --add label="space4_${SPACE4[(($i - 1))]}" app="^${SPACE4[(($i - 1))]}.*$" space=^4
done

# app rules - Use $( yabai -m query --windows | jq '.[].app' ) to find app name
# automatically float non-resizable windows, such as palettes, system settings etc.
yabai -m signal --add event=window_created action="yabai -m query --windows --window $YABAI_WINDOW_ID | jq -er ".\"can-resize\" or .\"is-floating\"" || yabai -m window $YABAI_WINDOW_ID --toggle float"


# fix for borderless qutebrowser
yabai -m rule --add app="^qutebrowser$" title!="^$" role="AXWindow" subrole="AXDialog" manage=on

# fix for focusing on next app when a windows closes
yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"

# flash window when in focus
# yabai -m signal --add label="flash_focus" event="window_focused" action="yabai -m window \$YABAI_WINDOW_ID --opacity 0.1 && sleep $(yabai -m config window_opacity_duration) && yabai -m window \$YABAI_WINDOW_ID --opacity 0.0"

# unload macos window manager
launchctl unload -F /System/Library/LaunchAgents/com.apple.WindowManager.plist >/dev/null 2>&1 &

# unload macos volume and brightness osd
launchctl unload -F /System/Library/LaunchAgents/com.apple.OSDUIHelper.plist >/dev/null 2>&1 &