# ------------------------------------------------------------------
# options
# ------------------------------------------------------------------

# color support
set -g default-terminal "screen-256color"

# enable mouse
set -g mouse on
set-option -g focus-events on

# wait time
set -s escape-time 0

# increase default pane buffer size
set-option -g history-limit 10000

# numbering
set -g base-index 1
setw -g pane-base-index 1

# rename window to program
setw -g automatic-rename on

# set terminal title
set -g set-titles on

# ------------------------------------------------------------------
# keybindings
# ------------------------------------------------------------------

# bind prefix
unbind C-b
unbind C-a
set-option -g prefix C-a
bind-key C-a send-prefix

# toggle status bar
bind-key t set-option status

# create windows
bind c new-window -c "#{pane_current_path}"

# split windows
bind "|" split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# switch pane positions
bind -n 'M-[' swap-pane -D
bind -n 'M-]' swap-pane -U

set -g renumber-windows on

bind-key 2 if-shell "tmux select-window -t :2" '' "new-window -t :2"
bind-key 3 if-shell "tmux select-window -t :3" '' "new-window -t :3"
bind-key 4 if-shell "tmux select-window -t :4" '' "new-window -t :4"
bind-key 5 if-shell "tmux select-window -t :5" '' "new-window -t :5"

bind ^ last-window
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R

# resurrect
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

# open tmux.conf
bind-key M split-window -h 'nvim ~/.dotfiles/config/tmux'

# reload tmux.conf
bind r source-file ~/.dotfiles/config/tmux/tmux.conf \; display

# enable vim keys for copy mode
set-window-option -g mode-keys vi

bind V copy-mode
bind -T copy-mode-vi V send-keys -X cancel

unbind -T copy-mode-vi v

bind -T copy-mode-vi v \
  send-keys -X begin-selection

bind -T copy-mode-vi 'C-v' \
  send-keys -X rectangle-toggle

bind -T copy-mode-vi y \
  send-keys -X copy-pipe-and-cancel "pbcopy"

bind -T copy-mode-vi MouseDragEnd1Pane \
  send-keys -X copy-pipe-and-cancel "pbcopy"

# ------------------------------------------------------------------
# Configure nvim-tmux-navigation
# See: https://github.com/christoomey/vim-tmux-navigator
# ------------------------------------------------------------------

# Decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

# Enable switching panes while in copy-mode-vi
bind -T copy-mode-vi 'C-h' select-pane -L
bind -T copy-mode-vi 'C-j' select-pane -D
bind -T copy-mode-vi 'C-k' select-pane -U
bind -T copy-mode-vi 'C-l' select-pane -R
bind -T copy-mode-vi 'C-\' select-pane -l
bind -T copy-mode-vi 'C-Space' select-pane -t:.+

# ------------------------------------------------------------------
# Smart pane resizing with awareness of Vim splits.
# See: https://github.com/RyanMillerC/better-vim-tmux-resizer
# ------------------------------------------------------------------

# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# # Edit values if you use custom resize_count variables
# bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "resize-pane -L 10"
# bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "resize-pane -D 5"
# bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "resize-pane -U 5"
# bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "resize-pane -R 10"

# bind-key -T copy-mode-vi M-h resize-pane -L 10
# bind-key -T copy-mode-vi M-j resize-pane -D 5
# bind-key -T copy-mode-vi M-k resize-pane -U 5
# bind-key -T copy-mode-vi M-l resize-pane -R 10

# ------------------------------------------------------------------
#  panes
# ------------------------------------------------------------------

# pane border lines
set -g pane-border-lines single

# pane border colors
set -g pane-border-style "fg=colour237,bg=default"
set -g pane-active-border-style "fg=colour237,bg=default"

# ------------------------------------------------------------------
#  theme
# ------------------------------------------------------------------

# message color
set -g message-style "bg=magenta,fg=black,bold"

# window title colors
set-window-option -g window-status-style "fg=magenta"
set-window-option -g window-status-style "bg=default"

# ------------------------------------------------------------------
# minimal tmux status
# ------------------------------------------------------------------

set -g @minimal-tmux-fg "#21262e"
set -g @minimal-tmux-bg "#61afef"
# set -g @minimal-tmux-justify "centre"
# set -g @minimal-tmux-indicator-str "  tmux  "
# set -g @minimal-tmux-indicator true
# set -g @minimal-tmux-status "bottom"

# enables or disables the left and right status bar
set -g @minimal-tmux-right true
set -g @minimal-tmux-left true

# expanded icon (fullscreen icon)
set -g @minimal-tmux-expanded-icon "󰊓 "

# false will make it visible for the current tab only
set -g @minimal-tmux-show-expanded-icons-for-all-tabs true

# to add or remove extra text in status bar
set -g @minimal-tmux-status-right-extra "" # "#[fg=#abb2bf] %l:%M %p  "
set -g @minimal-tmux-status-left-extra ""

# to make the selection box rounded () or edged <>
# default is nothing, when set to true default is edged
set -g @minimal-tmux-use-arrow false
set -g @minimal-tmux-right-arrow "#[fg=#abb2bf]▊"
set -g @minimal-tmux-left-arrow "#[fg=#abb2bf]▊"

# not recommended to change these values
set -g @minimal-tmux-status-right "#[fg=#abb2bf] "
set -g @minimal-tmux-status-left "#[fg=#abb2bf] "

# if getting strings cut in left status or right
# here 20 is the length of the characters in the string
set -g status-right-length 20
set -g status-left-length 20

# ------------------------------------------------------------------
# plugins
# ------------------------------------------------------------------

# set -g @plugin 'heuristicAL/tmux-atom-onedark'
set -g @plugin 'niksingh710/minimal-tmux-status'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin "tmux-plugins/tmux-continuum"
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'RyanMillerC/better-vim-tmux-resizer'
set -g @plugin 'yardnsm/tmux-1password'

set -g @1password-copy-to-clipboard 'on'
set -g @1password-key 'o'

# load plugins
run '~/.tmux/plugins/tpm/tpm'
run-shell '~/.tmux/plugins/tmux-resurrect/resurrect.tmux'
